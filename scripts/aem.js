function sampleRUM(checkpoint,data={}){sampleRUM.defer=sampleRUM.defer||[];const defer=(fnname)=>{sampleRUM[fnname]=sampleRUM[fnname]||((...args)=>sampleRUM.defer.push({fnname,args}))};sampleRUM.drain=sampleRUM.drain||((dfnname,fn)=>{sampleRUM[dfnname]=fn;sampleRUM.defer.filter(({fnname})=>dfnname===fnname).forEach(({fnname,args})=>sampleRUM[fnname](...args))});sampleRUM.always=sampleRUM.always||[];sampleRUM.always.on=(chkpnt,fn)=>{sampleRUM.always[chkpnt]=fn};sampleRUM.on=(chkpnt,fn)=>{sampleRUM.cases[chkpnt]=fn};defer('observe');defer('cwv');try{window.hlx=window.hlx||{};if(!window.hlx.rum){const usp=new URLSearchParams(window.location.search);const weight=usp.get('rum')==='on'?1:100;const id=Array.from({length:75},(_,i)=>String.fromCharCode(48+i)).filter((a)=>/\d|[A-Z]/i.test(a)).filter(()=>Math.random()*75>70).join('');const random=Math.random();const isSelected=random*weight<1;const firstReadTime=Date.now();const urlSanitizers={full:()=>window.location.href,origin:()=>window.location.origin,path:()=>window.location.href.replace(/\?.*$/,''),};window.hlx.rum={weight,id,random,isSelected,firstReadTime,sampleRUM,sanitizeURL:urlSanitizers[window.hlx.RUM_MASK_URL||'path'],}}
const{weight,id,firstReadTime}=window.hlx.rum;if(window.hlx&&window.hlx.rum&&window.hlx.rum.isSelected){const knownProperties=['weight','id','referer','checkpoint','t','source','target','cwv','CLS','FID','LCP','INP',];const sendPing=(pdata=data)=>{const body=JSON.stringify({weight,id,referer:window.hlx.rum.sanitizeURL(),checkpoint,t:Date.now()-firstReadTime,...data,},knownProperties,);const url=`https://rum.hlx.page/.rum/${weight}`;navigator.sendBeacon(url,body);console.debug(`ping:${checkpoint}`,pdata)};sampleRUM.cases=sampleRUM.cases||{cwv:()=>sampleRUM.cwv(data)||!0,lazy:()=>{const script=document.createElement('script');script.src='https://rum.hlx.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';document.head.appendChild(script);return!0},};sendPing(data);if(sampleRUM.cases[checkpoint]){sampleRUM.cases[checkpoint]()}}
if(sampleRUM.always[checkpoint]){sampleRUM.always[checkpoint](data)}}catch(error){}}
function setup(){window.hlx=window.hlx||{};window.hlx.RUM_MASK_URL='full';window.hlx.codeBasePath='';window.hlx.lighthouse=new URLSearchParams(window.location.search).get('lighthouse')==='on';const scriptEl=document.querySelector('script[src$="/scripts/scripts.js"]');if(scriptEl){try{[window.hlx.codeBasePath]=new URL(scriptEl.src).pathname.split('/scripts/scripts.js')}catch(error){console.log(error)}}}
function init(){setup();sampleRUM('top');window.addEventListener('load',()=>sampleRUM('load'));window.addEventListener('unhandledrejection',(event)=>{sampleRUM('error',{source:event.reason.sourceURL,target:event.reason.line})});window.addEventListener('error',(event)=>{sampleRUM('error',{source:event.filename,target:event.lineno})})}
function toClassName(name){return typeof name==='string'?name.toLowerCase().replace(/[^0-9a-z]/gi,'-').replace(/-+/g,'-').replace(/^-|-$/g,''):''}
function toCamelCase(name){return toClassName(name).replace(/-([a-z])/g,(g)=>g[1].toUpperCase())}
function readBlockConfig(block){const config={};block.querySelectorAll(':scope > div').forEach((row)=>{if(row.children){const cols=[...row.children];if(cols[1]){const col=cols[1];const name=toClassName(cols[0].textContent);let value='';if(col.querySelector('a')){const as=[...col.querySelectorAll('a')];if(as.length===1){value=as[0].href}else{value=as.map((a)=>a.href)}}else if(col.querySelector('img')){const imgs=[...col.querySelectorAll('img')];if(imgs.length===1){value=imgs[0].src}else{value=imgs.map((img)=>img.src)}}else if(col.querySelector('p')){const ps=[...col.querySelectorAll('p')];if(ps.length===1){value=ps[0].textContent}else{value=ps.map((p)=>p.textContent)}}else value=row.children[1].textContent;config[name]=value}}});return config}
async function loadCSS(href){return new Promise((resolve,reject)=>{if(!document.querySelector(`head > link[href="${href}"]`)){const link=document.createElement('link');link.rel='stylesheet';link.href=href;link.onload=resolve;link.onerror=reject;document.head.append(link)}else{resolve()}})}
async function loadScript(src,attrs){return new Promise((resolve,reject)=>{if(!document.querySelector(`head > script[src="${src}"]`)){const script=document.createElement('script');script.src=src;if(attrs){for(const attr in attrs){script.setAttribute(attr,attrs[attr])}}
script.onload=resolve;script.onerror=reject;document.head.append(script)}else{resolve()}})}
function getMetadata(name,doc=document){const attr=name&&name.includes(':')?'property':'name';const meta=[...doc.head.querySelectorAll(`meta[${attr}="${name}"]`)].map((m)=>m.content).join(', ');return meta||''}
function createOptimizedPicture(src,alt='',eager=!1,breakpoints=[{media:'(min-width: 600px)',width:'2000'},{width:'750'}],){const url=new URL(src,window.location.href);const picture=document.createElement('picture');const{pathname}=url;const ext=pathname.substring(pathname.lastIndexOf('.')+1);breakpoints.forEach((br)=>{const source=document.createElement('source');if(br.media)source.setAttribute('media',br.media);source.setAttribute('type','image/webp');source.setAttribute('srcset',`${pathname}?width=${br.width}&format=webply&optimize=medium`);picture.appendChild(source)});breakpoints.forEach((br,i)=>{if(i<breakpoints.length-1){const source=document.createElement('source');if(br.media)source.setAttribute('media',br.media);source.setAttribute('srcset',`${pathname}?width=${br.width}&format=${ext}&optimize=medium`);picture.appendChild(source)}else{const img=document.createElement('img');img.setAttribute('loading',eager?'eager':'lazy');img.setAttribute('alt',alt);picture.appendChild(img);img.setAttribute('src',`${pathname}?width=${br.width}&format=${ext}&optimize=medium`)}});return picture}
function decorateTemplateAndTheme(){const addClasses=(element,classes)=>{classes.split(',').forEach((c)=>{element.classList.add(toClassName(c.trim()))})};const template=getMetadata('template');if(template)addClasses(document.body,template);const theme=getMetadata('theme');if(theme)addClasses(document.body,theme);}
function decorateButtons(element){element.querySelectorAll('a').forEach((a)=>{a.title=a.title||a.textContent;if(a.href!==a.textContent){const up=a.parentElement;const twoup=a.parentElement.parentElement;if(!a.querySelector('img')){if(up.childNodes.length===1&&(up.tagName==='P'||up.tagName==='DIV')){a.className='button';up.classList.add('button-container')}
if(up.childNodes.length===1&&up.tagName==='STRONG'&&twoup.childNodes.length===1&&twoup.tagName==='P'){a.className='button primary';twoup.classList.add('button-container')}
if(up.childNodes.length===1&&up.tagName==='EM'&&twoup.childNodes.length===1&&twoup.tagName==='P'){a.className='button secondary';twoup.classList.add('button-container')}}}})}
function decorateIcon(span,prefix='',alt=''){const iconName=Array.from(span.classList).find((c)=>c.startsWith('icon-')).substring(5);const img=document.createElement('img');img.dataset.iconName=iconName;img.src=`${window.hlx.codeBasePath}${prefix}/icons/${iconName}.svg`;img.alt=alt;img.loading='lazy';span.append(img)}
function decorateIcons(element,prefix=''){const icons=[...element.querySelectorAll('span.icon')];icons.forEach((span)=>{decorateIcon(span,prefix)})}
function decorateSections(main){main.querySelectorAll(':scope > div').forEach((section)=>{const wrappers=[];let defaultContent=!1;[...section.children].forEach((e)=>{if(e.tagName==='DIV'||!defaultContent){const wrapper=document.createElement('div');wrappers.push(wrapper);defaultContent=e.tagName!=='DIV';if(defaultContent)wrapper.classList.add('default-content-wrapper');}
wrappers[wrappers.length-1].append(e)});wrappers.forEach((wrapper)=>section.append(wrapper));section.classList.add('section');section.dataset.sectionStatus='initialized';section.style.display='none';const sectionMeta=section.querySelector('div.section-metadata');if(sectionMeta){const meta=readBlockConfig(sectionMeta);Object.keys(meta).forEach((key)=>{if(key==='style'){const styles=meta.style.split(',').filter((style)=>style).map((style)=>toClassName(style.trim()));styles.forEach((style)=>section.classList.add(style))}else{section.dataset[toCamelCase(key)]=meta[key]}});sectionMeta.parentNode.remove()}})}
async function fetchPlaceholders(prefix='default'){window.placeholders=window.placeholders||{};if(!window.placeholders[prefix]){window.placeholders[prefix]=new Promise((resolve)=>{fetch(`${prefix === 'default' ? '' : prefix}/placeholders.json`).then((resp)=>{if(resp.ok){return resp.json()}
return{}}).then((json)=>{const placeholders={};json.data.filter((placeholder)=>placeholder.Key).forEach((placeholder)=>{placeholders[toCamelCase(placeholder.Key)]=placeholder.Text});window.placeholders[prefix]=placeholders;resolve(window.placeholders[prefix])}).catch(()=>{window.placeholders[prefix]={};resolve(window.placeholders[prefix])})})}
return window.placeholders[`${prefix}`]}
function updateSectionsStatus(main){const sections=[...main.querySelectorAll(':scope > div.section')];for(let i=0;i<sections.length;i+=1){const section=sections[i];const status=section.dataset.sectionStatus;if(status!=='loaded'){const loadingBlock=section.querySelector('.block[data-block-status="initialized"], .block[data-block-status="loading"]',);if(loadingBlock){section.dataset.sectionStatus='loading';break}else{section.dataset.sectionStatus='loaded';section.style.display=null}}}}
function buildBlock(blockName,content){const table=Array.isArray(content)?content:[[content]];const blockEl=document.createElement('div');blockEl.classList.add(blockName);table.forEach((row)=>{const rowEl=document.createElement('div');row.forEach((col)=>{const colEl=document.createElement('div');const vals=col.elems?col.elems:[col];vals.forEach((val)=>{if(val){if(typeof val==='string'){colEl.innerHTML+=val}else{colEl.appendChild(val)}}});rowEl.appendChild(colEl)});blockEl.appendChild(rowEl)});return blockEl}
async function loadBlock(block){const status=block.dataset.blockStatus;if(status!=='loading'&&status!=='loaded'){block.dataset.blockStatus='loading';const{blockName}=block.dataset;try{const cssLoaded=loadCSS(`${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`);const decorationComplete=new Promise((resolve)=>{(async()=>{try{const mod=await import(`${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.js`);if(mod.default){await mod.default(block)}}catch(error){console.log(`failed to load module for ${blockName}`,error)}
resolve()})()});await Promise.all([cssLoaded,decorationComplete])}catch(error){console.log(`failed to load block ${blockName}`,error)}
block.dataset.blockStatus='loaded'}
return block}
async function loadBlocks(main){updateSectionsStatus(main);const blocks=[...main.querySelectorAll('div.block')];for(let i=0;i<blocks.length;i+=1){await loadBlock(blocks[i]);updateSectionsStatus(main)}}
function decorateBlock(block){const shortBlockName=block.classList[0];if(shortBlockName){block.classList.add('block');block.dataset.blockName=shortBlockName;block.dataset.blockStatus='initialized';const blockWrapper=block.parentElement;blockWrapper.classList.add(`${shortBlockName}-wrapper`);const section=block.closest('.section');if(section)section.classList.add(`${shortBlockName}-container`);}}
function decorateBlocks(main){main.querySelectorAll('div.section > div > div').forEach(decorateBlock)}
async function loadHeader(header){const headerBlock=buildBlock('header','');header.append(headerBlock);decorateBlock(headerBlock);return loadBlock(headerBlock)}
async function loadFooter(footer){const footerBlock=buildBlock('footer','');footer.append(footerBlock);decorateBlock(footerBlock);return loadBlock(footerBlock)}
async function waitForLCP(lcpBlocks){const block=document.querySelector('.block');const hasLCPBlock=block&&lcpBlocks.includes(block.dataset.blockName);if(hasLCPBlock)await loadBlock(block);document.body.style.display=null;const lcpCandidate=document.querySelector('main img');await new Promise((resolve)=>{if(lcpCandidate&&!lcpCandidate.complete){lcpCandidate.setAttribute('loading','eager');lcpCandidate.addEventListener('load',resolve);lcpCandidate.addEventListener('error',resolve)}else{resolve()}})}
init();export{buildBlock,createOptimizedPicture,decorateBlock,decorateBlocks,decorateButtons,decorateIcons,decorateSections,decorateTemplateAndTheme,fetchPlaceholders,getMetadata,loadBlock,loadBlocks,loadCSS,loadFooter,loadHeader,loadScript,readBlockConfig,sampleRUM,setup,toCamelCase,toClassName,updateSectionsStatus,waitForLCP,}